name: Publish release

on:
  push:
    tags:
      - 'v*' # On push events with tags matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Build
      run: |
        python -m pip install --upgrade pip
        pip install build setuptools wheel
        python -m build

    - name: Save build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist-artifact
        path: dist/

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Get build artifacts
      uses: actions/download-artifact@v2
      with:
        name: dist-artifact
        path: dist/

    - name: Install from build
      run: |
        python -m pip install --upgrade pip
        pip install resqpy[tests] --no-index --find-links=build/

    - name: Run tests
      run: pytest

  publish:
    name: Make release and publish
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Get build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-artifact
          path: dist/

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ github.ref }}
          tag: ${{ github.ref }}
          artifacts: "dist/"
          body: |
            Changes in this Release
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Test PyPI
        # TODO: Move to prod PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          python -m pip install --upgrade pip
          pip install twine
          twine upload --repository testpypi dist/*
